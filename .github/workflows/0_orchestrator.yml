name: 0_orchestrator

on:
  workflow_run:
    workflows: ["g_build_mediabank"]
    types: [completed]

jobs:
  orchestrate:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Télécharger media_bank depuis le run déclencheur
        uses: actions/download-artifact@v4
        with:
          name: media_bank
          path: media_bank
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lister contenu media_bank
        run: |
          set -euo pipefail
          echo "=== IMAGES ==="
          ls -1 media_bank/images || true
          echo "=== VIDEOS ==="
          ls -1 media_bank/videos || true

      # Ici, vous enchaînez avec vos jobs/étapes de rendu :
      # - génération prompt/scénario
      # - TTS (ElevenLabs)
      # - sous-titres + karaoké
      # - montage (transitions, fond visuel à partir de media_bank)
      # - export final + upload artefact
      #
      # Exemple placeholder simple (à adapter à votre pipeline réelle) :
      - name: Préparer build
        run: |
          set -euo pipefail
          mkdir -p build outputs

      - name: Choisir 12 médias (images/vidéos) aléatoires
        run: |
          set -euo pipefail
          # Sélection d’au plus 12 images/vidéos pour un mock de montage
          find media_bank/images -type f -name "*.jpg" 2>/dev/null | shuf | head -n 12 > work_imgs.txt || true
          find media_bank/videos -type f -name "*.mp4" 2>/dev/null | shuf | head -n 3 > work_vids.txt || true
          echo "Sélection images:"
          cat work_imgs.txt || true
          echo "Sélection vidéos:"
          cat work_vids.txt || true

      - name: Mock rendu (remplacez par vos étapes ffmpeg réelles)
        run: |
          set -euo pipefail
          # Ici mettez vos vraies commandes (ffmpeg, tts, srt, transitions…)
          # On crée juste un fichier témoin pour prouver que l’orchestrateur fonctionne.
          echo "OK" > outputs/ok.txt

      - name: Uploader artefact de sortie
        uses: actions/upload-artifact@v4
        with:
          name: render_outputs
          path: outputs
          if-no-files-found: error