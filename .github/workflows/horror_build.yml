name: Horror TikTok Builder (no-heredoc, voice-length)

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # ---- Secrets (définis dans Settings > Secrets and variables > Actions)
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
      ELEVENLABS_VOICE_ID: ${{ secrets.ELEVENLABS_VOICE_ID }}
      MANIFEST_URL: ${{ secrets.MANIFEST_URL }}        # facultatif (liste d'URL mp4)
      DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
      DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
      DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}

      # ---- Paramètres pipeline
      OUT_NAME: "final_horror.mp4"
      SYSTEM_PROMPT: "Tu écris un script court et immersif d'horreur en français. N'inclus AUCUNE didascalie (intro, scène, narrateur, CTA, etc.). Raconte seulement l'histoire."
      USER_PROMPT: "Écris un script TikTok de 180 à 200 mots (65-75s). Thème : horreur atmosphérique, manoir, pluie, bruits métalliques. Style concis, phrases courtes, sans grossièretés."

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify required secrets
        run: |
          set -euo pipefail
          test -n "${OPENAI_API_KEY}" || { echo "OPENAI_API_KEY manquant"; exit 1; }
          test -n "${ELEVENLABS_API_KEY}" || { echo "ELEVENLABS_API_KEY manquant"; exit 1; }
          test -n "${ELEVENLABS_VOICE_ID}" || { echo "ELEVENLABS_VOICE_ID manquant"; exit 1; }
          test -n "${DROPBOX_APP_KEY}" || { echo "DROPBOX_APP_KEY manquant"; exit 1; }
          test -n "${DROPBOX_APP_SECRET}" || { echo "DROPBOX_APP_SECRET manquant"; exit 1; }
          test -n "${DROPBOX_REFRESH_TOKEN}" || { echo "DROPBOX_REFRESH_TOKEN manquant"; exit 1; }

      - name: Install dependencies (ffmpeg, jq)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq

      - name: Generate story (OpenAI)
        run: |
          set -euo pipefail
          python3 scripts/generate_story.py
          test -s story/story.txt

      - name: Synthesize voice (ElevenLabs)
        run: |
          set -euo pipefail
          python3 scripts/tts_elevenlabs.py
          test -s audio/voice.mp3

      - name: Build subtitles (ASS)
        run: |
          set -euo pipefail
          python3 subtitles/build_ass.py
          test -s subtitles/captions.ass

      - name: Select clips & merge to cover voice duration
        run: |
          set -euo pipefail
          python3 scripts/select_and_merge.py
          test -s selected_media/merged.mp4

      - name: Render final (no black padding; cut/loop to voice length)
        run: |
          set -euo pipefail
          bash render/render_final.sh
          test -s "final_video/${OUT_NAME}"

      - name: Upload to Dropbox (refresh token)
        run: |
          set -euo pipefail
          bash upload/dropbox_upload.sh
          test -s final_video/dropbox_link.txt && cat final_video/dropbox_link.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: final_video
          path: |
            final_video/${{ env.OUT_NAME }}
            final_video/dropbox_link.txt
          if-no-files-found: error