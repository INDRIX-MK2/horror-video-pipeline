name: Horror TikTok Builder (no-heredoc)

on:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  OUT_NAME: "final_horror.mp4"

  USER_PROMPT: "Écris un script TikTok de 180 à 200 mots (65-75s). Structure : hook (10s), développement (45s), conclusion avec CTA (10s). Thème : horreur atmosphérique, manoir, pluie, bruits métalliques. Style concis, phrases courtes, sans grossièretés."
  SYSTEM_PROMPT: "Tu écris un script court et immersif d'horreur en français. N'inclus AUCUNE didascalie (intro, scène, narrateur, CTA, etc.). Raconte seulement l'histoire."
  OPENAI_MODEL: "gpt-4o"
  OPENAI_TEMPERATURE: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
      ELEVENLABS_VOICE_ID: ${{ secrets.ELEVENLABS_VOICE_ID }}
      DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
      DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
      DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install FFmpeg
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          set -euo pipefail
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Validate secrets & folders
        run: |
          set -euo pipefail
          : "${OPENAI_API_KEY:?OPENAI_API_KEY manquant}"
          : "${ELEVENLABS_API_KEY:?ELEVENLABS_API_KEY manquant}"
          : "${ELEVENLABS_VOICE_ID:?ELEVENLABS_VOICE_ID manquant}"
          : "${DROPBOX_APP_KEY:?DROPBOX_APP_KEY manquant}"
          : "${DROPBOX_APP_SECRET:?DROPBOX_APP_SECRET manquant}"
          : "${DROPBOX_REFRESH_TOKEN:?DROPBOX_REFRESH_TOKEN manquant}"
          mkdir -p story audio selected_media subs final_video

      # ---------- 1) Génération du script ----------
      - name: Generate story (GPT-4o temp=1, no stage directions)
        run: |
          set -euo pipefail
          python scripts/generate_story.py \
            --system "$SYSTEM_PROMPT" \
            --user "$USER_PROMPT" \
            --model "$OPENAI_MODEL" \
            --temperature "$OPENAI_TEMPERATURE" \
            --out story/story.txt

      - name: Show story length
        run: |
          set -euo pipefail
          wc -w story/story.txt || true
          sed -n '1,10p' story/story.txt || true

      # ---------- 2) Voix ElevenLabs ----------
      - name: Synthesize voice
        run: |
          set -euo pipefail
          python scripts/voice_elevenlabs.py \
            --transcript story/story.txt \
            --out audio/voice.wav

      - name: Probe audio duration
        run: |
          set -euo pipefail
          ffprobe -v error -show_entries format=duration -of default=nk=1:nw=1 audio/voice.wav

      # ---------- 3) Sélection + Merge vidéo ----------
      - name: Select & merge clips from manifest (absolute list, no count limit)
        run: |
          set -euo pipefail
          [ -s "manifests/horreur.txt" ] || { echo "manifests/horreur.txt manquant/vide"; exit 1; }
          python scripts/select_and_merge.py \
            --manifest manifests/horreur.txt \
            --out selected_media/merged.mp4 \
            --abs-list

      - name: Probe merged video
        run: |
          set -euo pipefail
          ffprobe -v error -select_streams v:0 -show_entries stream=width,height,avg_frame_rate,duration \
            -of default=nk=1:nw=1 selected_media/merged.mp4 || true

      # ---------- 4) Sous-titres ----------
      - name: Build ASS subtitles
        run: |
          set -euo pipefail
          python scripts/build_ass.py \
            --transcript story/story.txt \
            --audio audio/voice.wav \
            --out subs/captions.ass

      - name: Check subtitles
        run: |
          set -euo pipefail
          [ -s subs/captions.ass ] || { echo "captions.ass manquant/vide"; exit 1; }
          head -n 30 subs/captions.ass || true

      # ---------- 5) Rendu final ----------
      - name: Render final video (effects + subtitles, cut to audio length)
        run: |
          set -euo pipefail
          python scripts/render_final.py \
            --video selected_media/merged.mp4 \
            --audio audio/voice.wav \
            --subs subs/captions.ass \
            --output "final_video/${OUT_NAME}"

      - name: Show final info
        run: |
          set -euo pipefail
          ls -lh final_video || true
          ffprobe -v error -show_entries format=duration -of default=nk=1:nw=1 "final_video/${OUT_NAME}" || true

      # ---------- 6) Artifacts ----------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: run_outputs
          path: |
            story/
            subs/
            selected_media/
            final_video/

      # ---------- 7) Upload to Dropbox ----------
      - name: Upload to Dropbox (refresh-token)
        run: |
          set -euo pipefail
          python scripts/dropbox_upload.py \
            --file "final_video/${OUT_NAME}" \
            --remote-dir "/horror"