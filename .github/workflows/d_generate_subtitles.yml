name: G - Generate Subtitles
on:
  workflow_call:

jobs:
  subtitles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: story
          path: work
      - uses: actions/download-artifact@v4
        with:
          name: voice
          path: work

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate karaoke ASS (size 14, yellow words)
        run: |
          set -e
          mkdir -p outputs
          printf "%s\n" \
          "import json, subprocess, pathlib, re" \
          "txt = pathlib.Path('work/story.txt').read_text(encoding='utf-8')" \
          "words = [w for w in re.findall(r\"\\S+\", txt) if w.strip()]" \
          "probe = subprocess.run(['ffprobe','-v','error','-show_entries','format=duration','-of','json','work/voice.mp3'], capture_output=True, text=True)" \
          "dur = float(json.loads(probe.stdout)['format']['duration']) if probe.stdout else 65.0" \
          "per = dur / max(1, len(words))" \
          "def sec_to_ass(t):" \
          "  h=int(t//3600); m=int((t%3600)//60); s=t%60" \
          "  return f\"{h:01d}:{m:02d}:{s:05.2f}\"" \
          "ass = []" \
          "ass.append('[Script Info]')" \
          "ass.append('Title: Karaoke Horreur')" \
          "ass.append('')" \
          "ass.append('[V4+ Styles]')" \
          "ass.append('Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding')" \
          "ass.append('Style: Default,Arial,14,&H00FFFF00,&H00000000,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,1,2,20,20,30,1')" \
          "ass.append('')" \
          "ass.append('[Events]')" \
          "ass.append('Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text')" \
          "time = 0.0" \
          "chunk = 6" \
          "for i in range(0,len(words),chunk):" \
          "  seg = words[i:i+chunk]" \
          "  start = time; end = time + per*len(seg)" \
          "  syl = ' '.join([f'{{\\\\k{int(per*100)}}}{w}' for w in seg])" \
          "  ass.append(f'Dialogue: 0,{sec_to_ass(start)},{sec_to_ass(end)},Default,,0,0,30,,{syl}')" \
          "  time = end" \
          "pathlib.Path('outputs/captions.ass').write_text('\\n'.join(ass),encoding='utf-8')" \
          > build_ass.py
          python build_ass.py

      - name: Upload subtitles
        uses: actions/upload-artifact@v4
        with:
          name: subtitles
          path: outputs/captions.ass